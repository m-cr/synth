"use strict";angular.module("synthApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("synthApp").controller("MainCtrl",["$scope","Synth","$window",function(a,b,c){a.Math=c.Math,a.type="square",a.types=["sine","square","sawtooth","triangle"],a.changeType=b.changeType,a.frequency=80,a.changeFrequency=b.changeFrequency,a.volume=1,a.changeVolume=b.changeVolume,a.changeVolume(1),a.filterType="bandpass",a.filterTypes=["lowpass","highpass","bandpass","notch"],a.changeFilterType=b.changeFilterType,a.step=function(a){return a/1e3},a.filterFrequency=b.filterFrequency,a.filter=500,b.oscillator.start(),a.changeLfo=b.changeLfo,a.changeLfoType=b.changeLfoType,a.dest="filter",a.dests=["filter","volume"],a.lfoRate=3,a.lfoType="sawtooth",a.changeRate=b.changeRate,a.effectTypes=["distortion","delay"]}]),angular.module("synthApp").factory("Synth",["$window",function(a){var b={},c=new a.AudioContext,d=c.createOscillator(),e=c.createGain(),f=c.createBiquadFilter();f.type="bandpass";var g=c.createBiquadFilter();f.frequency.value=1e3,g.frequency.value=5e3;var h=c.createGain();e.gain.value=.01,d.frequency.value=440,d.type="square";var i=c.createOscillator();i.frequency.value=3,i.type="sawtooth";var j=c.createGain();j.gain.value=.01;var k=c.createGain();return k.gain.value=500,i.connect(j),i.connect(k),d.connect(f),f.connect(e),e.connect(h),h.connect(c.destination),i.start(0),b.oscillator=d,b.gain=e,b.filter=f,b.start=function(){return d.start()},b.changeLfo=function(a){"filter"===a?(i.disconnect(),j.disconnect(),i.connect(k),k.connect(f.frequency)):(i.disconnect(),k.disconnect(),i.connect(j),j.connect(e.gain))},b.changeLfo("volume"),b.stop=function(){return d.stop()},b.changeFrequency=function(a){d.frequency.value=a},b.changeType=function(a){d.type=a},b.changeFilterType=function(a){f.type=a},b.changeLfoType=function(a){i.type=a},b.filterFrequency=function(a){f.frequency.value=a},b.startOscillator=function(){d.start()},b.changeVolume=function(a){h.gain.value=a},b.changeRate=function(a){i.frequency.value=a},b}]),angular.module("synthApp").run(["$templateCache",function(a){a.put("views/main.html",'<div class="well"> <div class="pull-right"> <button ng-show="volume !== 0" class="btn btn-default" ng-click="changeVolume(0); oldVolume = volume; volume=0;" type="submit">Mute</button> <button ng-show="volume === 0" class="btn btn-default" ng-click="changeVolume(oldVolume); volume = oldVolume;" type="submit">Un-mute</button> </div> <h3>Oscillator</h3> <p>Volume: {{Math.floor(volume * (50))}}</p> <input type="range" min="0" max="3" value="{{volume}}" step=".005" ng-model="volume" ng-change="changeVolume(volume)"> <br> <p>Type: {{type}}</p> <select ng-model="type" ng-options="t for t in types" ng-change="changeType(type)"></select> <br><br> <p>Oscillator Frequency: {{frequency}}</p> <input type="range" min="20" max="1000" value="{{frequency}}" step="1" ng-model="frequency" ng-change="changeFrequency(frequency)"> <br> </div> <div class="well"> <h3>Filter</h3> <p>Type: {{filterType}}</p> <select ng-model="filterType" ng-options="t for t in filterTypes" ng-change="changeFilterType(filterType)"></select> <br><br> <p>Filter Frequency: {{filter}}</p> <input type="range" min="20" max="5000" value="{{filter}}" step="1" ng-model="filter" ng-change="filterFrequency(filter)"> </div> <div class="well"> <h3>LFO</h3> <p>Destination: {{dest}} </p> <select ng-model="dest" ng-options="d for d in dests" ng-change="changeLfo(dest)"></select> <br> <p>Rate: {{lfoRate}} </p> <input type="range" min="0" max="100" value="{{lfoRate}}" step="1" ng-model="lfoRate" ng-change="changeRate(lfoRate)"> <br> <p>Type: {{lfoType}}</p> <select ng-model="lfoType" ng-options="t for t in types" ng-change="changeLfoType(lfoType)"></select> <br> </div>')}]);